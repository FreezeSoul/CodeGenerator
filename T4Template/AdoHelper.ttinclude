<#+
class AdoHelper {
	/// <summary>
	/// 
	/// </summary>
	/// <typeparam name="T"></typeparam>
	/// <param name="obj"></param>
	/// <returns></returns>
	public bool IsNullable<T>(T obj)
    {
        if (obj == null) return true; // obvious
        Type type = typeof(T);
        if (!type.IsValueType) return true; // ref-type
        if (Nullable.GetUnderlyingType(type) != null) return true; // Nullable<T>
        return false; // value-type
    }
	/// <summary>
	///
	/// </summary>
	/// <param name="Table"> </param>
	/// <returns></returns>
	public List<Column> GetPrimaryKeys(Table table)
	{
		List<Column> columns = new List<Column>();
		foreach(Column column in table.Columns)
		{
			if(column.InPrimaryKey)
				columns.Add(column);
		}
		return columns;
	}
	/// <summary>
	///
	/// </summary>
	/// <param name="Table"> </param>
	/// <returns></returns>
	public List<Column> GetForeignKeys(Table table)
	{
		List<Column> columns = new List<Column>();
		foreach(Column column in table.Columns)
		{
			if(column.IsForeignKey)
				columns.Add(column);
		}
		return columns;
	}
	/// <summary>
	/// 数据库中与C#中的数据类型对照
	/// </summary>
	/// <param name="type">Sql Server中数据类型</param>
	/// <returns>C#中数据类型</returns>
	public string ChangeToCSharpType(string type)
	{
	    string reval = string.Empty;
	    switch (type.ToLower())
	    {
	        case "int":
	            reval = "Int32";
	            break;
	        case "text":
	            reval = "String";
	            break;
	        case "bigint":
	            reval = "Int64";
	            break;
	        case "binary":
	            reval = "System.Byte[]";
	            break;
	        case "bit":
	            reval = "Boolean";
	            break;
	        case "char":
	            reval = "String";
	            break;
			case "date":
	            reval = "System.DateTime";
	            break;
	        case "datetime":
	            reval = "System.DateTime";
	            break;
			case "datetime2":
	            reval = "System.DateTime";
	            break;
	        case "decimal":
	            reval = "System.Decimal";
	            break;
	        case "float":
	            reval = "System.Double";
	            break;
	        case "image":
	            reval = "System.Byte[]";
	            break;
	        case "money":
	            reval = "System.Decimal";
	            break;
	        case "nchar":
	            reval = "String";
	            break;
	        case "ntext":
	            reval = "String";
	            break;
	        case "numeric":
	            reval = "System.Decimal";
	            break;
	        case "nvarchar":
	            reval = "String";
	            break;
	        case "real":
	            reval = "System.Single";
	            break;
	        case "smalldatetime":
	            reval = "System.DateTime";
	            break;
	        case "smallint":
	            reval = "Int16";
	            break;
	        case "smallmoney":
	            reval = "System.Decimal";
	            break;
	        case "timestamp":
	            reval = "System.DateTime";
	            break;
	        case "tinyint":
	            reval = "System.Byte";
	            break;
	        case "uniqueidentifier":
	            reval = "System.Guid";
	            break;
	        case "varbinary":
	            reval = "System.Byte[]";
	            break;
	        case "varchar":
	            reval = "String";
	            break;
	        case "Variant":
	            reval = "Object";
	            break;
	        default:
	            reval = "String";
	            break;
	    }
	    return reval;
	}
	
	
	/// <summary>
	/// 数据库中与C#中的数据类型对照
	/// </summary>
	/// <param name="type">Sql Server中数据类型</param>
	/// <param name="isNull">是否空</param>
	/// <returns>C#中数据类型</returns>
	public string ChangeToCSharpType(string type,bool isNull)
	{
	    string reval = string.Empty;
	    switch (type.ToLower())
	    {
	        case "int":
	            reval = "Int32" + (isNull?"?":string.Empty);
	            break;
	        case "text":
	            reval = "String";
	            break;
	        case "bigint":
	            reval = "Int64" + (isNull?"?":string.Empty);
	            break;
	        case "binary":
	            reval = "System.Byte[]";
	            break;
	        case "bit":
	            reval = "Boolean" +  (isNull?"?":string.Empty);
	            break;
	        case "char":
	            reval = "String";
	            break;
			case "date":
	            reval = "System.DateTime" + (isNull?"?":string.Empty);
	            break;
	        case "datetime":
	            reval = "System.DateTime" + (isNull?"?":string.Empty);
	            break;
			case "datetime2":
	            reval = "System.DateTime" + (isNull?"?":string.Empty);
	            break;
	        case "decimal":
	            reval = "System.Decimal" +  (isNull?"?":string.Empty);
	            break;
	        case "float":
	            reval = "System.Double" + (isNull?"?":string.Empty);
	            break;
	        case "image":
	            reval = "System.Byte[]";
	            break;
	        case "money":
	            reval = "System.Decimal" + (isNull?"?":string.Empty);
	            break;
	        case "nchar":
	            reval = "String";
	            break;
	        case "ntext":
	            reval = "String";
	            break;
	        case "numeric":
	            reval = "System.Decimal" + (isNull?"?":string.Empty);
	            break;
	        case "nvarchar":
	            reval = "String";
	            break;
	        case "real":
	            reval = "System.Single" + (isNull?"?":string.Empty);
	            break;
	        case "smalldatetime":
	            reval = "System.DateTime";
	            break;
	        case "smallint":
	            reval = "Int16" + (isNull?"?":string.Empty);
	            break;
	        case "smallmoney":
	            reval = "System.Decimal" + (isNull?"?":string.Empty);
	            break;
	        case "timestamp":
	            reval = "System.DateTime" + (isNull?"?":string.Empty);
	            break;
	        case "tinyint":
	            reval = "System.Byte" + (isNull?"?":string.Empty);
	            break;
	        case "uniqueidentifier":
	            reval = "System.Guid" + (isNull?"?":string.Empty);
	            break;
	        case "varbinary":
	            reval = "System.Byte[]";
	            break;
	        case "varchar":
	            reval = "String";
	            break;
	        case "Variant":
	            reval = "Object";
	            break;
	        default:
	            reval = "String";
	            break;
	    }
	    return reval;
	}
}
#>