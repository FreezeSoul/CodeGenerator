<#@ template language="C#" hostspecific="false"
#><#@ assembly name="System.Core"
#><#@ assembly name="System.Data.Linq"
#><#@ assembly name="System.Xml"
#><#@ assembly name="System.Xml.Linq"
#><#@ import namespace="System"
#><#@ import namespace="System.CodeDom"
#><#@ import namespace="System.CodeDom.Compiler"
#><#@ import namespace="System.Collections.Generic"
#><#@ import namespace="System.Data.Linq"
#><#@ import namespace="System.Data.Linq.Mapping"
#><#@ import namespace="System.IO"
#><#@ import namespace="System.Linq"
#><#@ import namespace="System.Reflection"
#><#@ import namespace="System.Text"
#><#@ import namespace="System.Xml.Linq"
#><#@ import namespace="Microsoft.SqlServer.Management.Smo" 
#><#@ import namespace="Microsoft.SqlServer.Management.Common" 
#><#@include file="T4Template\DevHelper.ttinclude"
#><#@include file="T4Template\AdoHelper.ttinclude"
#><#@include file="T4Template\SmoHelper.ttinclude"
#><#@ parameter name="ConnectionString" type="System.String" 
#><#@ parameter name="DataBaseName" type="System.String" 
#><#@ parameter name="SelectedName" type="System.String" 
#><#
var adoHelper = new AdoHelper();
  var smoHelper = new SmoHelper();

  Database database = smoHelper.Connect(ConnectionString,DataBaseName);
  database.Refresh();
  #>using System;
  using System.Collections.Generic;
  using System.ComponentModel;
  using System.Data;
  using System.Text;
  using System.Linq;

  namespace DomainModelLayer
  {
    public partial class DataBaseMetas
    {
      public static Dictionary<string,string> TableMetas = new Dictionary<string, string>()
      {
    <#
		    foreach(Table table in database.Tables)
		    {
			    table.Refresh();
			    table.ExtendedProperties.Refresh();
			    string describe = table.ExtendedProperties["MS_Description"]==null?table.Name: table.ExtendedProperties["MS_Description"].Value.ToString();
	    #>
                  {"<#=table.Name#>","<#=describe#>"},
      <# 
		    }
	    #>
         };
     }
 }